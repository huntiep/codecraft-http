(import (syscalls *))
(import malloc)
(import (malloc alloc))
(import (util str-eq?))

(module Request
    (define method 0)
    (define version 4)
    (define path 8)
    (define path.len 16)
    (define headers 24)
    (define headers.len 32)
    (define headers.capacity 40)

    (define size 48)
)

(jal x1 (malloc init))

;; socket(AF_INET, SOCK_STREAM, IPPROTO_IP)
(addi x10 x0 AF_INET)
(addi x11 x0 SOCK_STREAM)
(addi x12 x0 IPPROTO_IP)
(addi x17 x0 SYS_SOCKET)
(ecall)
(blt x10 x0 socket-err)
(subi x2 x2 8)
(sd x2 x10)
;; setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, [1], 4)
(addi x11 x0 SOL_SOCKET)
(addi x12 x0 SO_REUSEADDR)
(addi x5 x0 1)
(sd (- x2 8) x5)
(addi x13 x2 -8)
(addi x14 x0 4)
(addi x17 x0 SYS_SETSOCKOPT)
(ecall)
(blt x10 x0 reuseaddr-err)
;; bind(fd, {}, 16)
(ld x10 x2)
(subi x2 x2 16)
(addi x5 x0 AF_INET)
(sh x2 x5)
;; sin_port = 4221
(addi x5 x0 0x7d)
(sb (+ x2 3) x5)
(addi x5 x0 0x10)
(sb (+ x2 2) x5)
;; sin_addr
(sw (+ x2 4) x0)
(sd (+ x2 8) x0)
(add x11 x0 x2)
(addi x12 x0 16)
(addi x17 x0 SYS_BIND)
(ecall)
(bne x10 x0 bind-err)
;; listen(fd, 5)
(ld x10 (+ x2 16))
(addi x11 x0 5)
(addi x17 x0 SYS_LISTEN)
(ecall)
(bne x10 x0 listen-err)
;; accept(fd, _, _)
(ld x10 (+ x2 16))
(add x11 x0 x2)
(addi x12 x0 16)
(sd (- x2 8) x12)
(subi x12 x2 8)
(addi x17 x0 SYS_ACCEPT)
(ecall)
(addi x2 x2 16)
(blt x10 x0 accept-err)
(subi x2 x2 32)
(sd x2 x10)
;; read(cfd, buf, buf.len)
(addi x10 x0 1024)
(jal x1 alloc)
(sd (+ x2 8) x10)
(add x11 x0 x10)
(addi x12 x0 1024)
(ld x10 x2)
(addi x17 x0 SYS_READ)
(ecall)
(blt x10 x0 read-err)
(sd (+ x2 16) x10)

(addi x10 x0 (Request size))
(jal x1 alloc)
(sd (+ x2 24) x10)
(ld x5 (+ x2 8))
(ld x6 (+ x2 16))
(add x6 x6 x5)
(sd (+ x2 16) x6)

(add x10 x0 x5)
method-loop
    (beq x5 x6 bad-request)
    (lb x7 x5)
    (addi x5 x5 1)
    (subi x7 x7 #' ')
    (bne x7 x0 method-loop)
(sd (+ x2 8) x5)
(defcon GET-str "GET")
(define GET 1)
(defcon POST-str "POST")
(define POST 2)
(sub x11 x5 x10)
(subi x11 x11 1)
(subi x2 x2 16)
(sd x2 x10)
(sd (+ x2 8) x11)
(la x12 GET-str)
(addi x13 x0 (len GET-str))
(jal x1 str-eq?)
(addi x7 x0 GET)
(bne x10 x0 method-done)
(ld x10 x2)
(ld x11 (+ x2 8))
(la x12 POST-str)
(addi x13 x0 (len POST-str))
(jal x1 str-eq?)
(addi x7 x0 POST)
(bne x10 x0 method-done)
;; Unknown method
(addi x7 x0 -1)
method-done
(addi x2 x2 16)
(ld x10 (+ x2 24))
(sw (+ x10 (Request method)) x7)

(ld x5 (+ x2 8))
(ld x6 (+ x2 16))
(add x11 x0 x5)
path-loop
    (beq x5 x6 bad-request)
    (lb x7 x5)
    (addi x5 x5 1)
    (subi x7 x7 #' ')
    (bne x7 x0 path-loop)
(ld x10 (+ x2 24))
(sd (+ x10 (Request path)) x11)
(subi x12 x5 1)
(beq x11 x12 bad-request)
(sd (+ x10 (Request path.len)) x12)


(add x10 x0 x5)
version-loop
    (beq x5 x6 bad-request)
    (lb x7 x5)
    (addi x5 x5 1)
    (subi x7 x7 #'\r')
    (bne x7 x0 version-loop)
(sd (+ x2 8) x5)
(defcon VERSION-str "HTTP/1.1")
(define VERSION 1)
(sub x11 x5 x10)
(subi x11 x11 1)
(la x12 VERSION-str)
(addi x13 x0 (len VERSION-str))
(jal x1 str-eq?)
(addi x7 x0 VERSION)
(bne x10 x0 version-done)
(addi x7 x0 -1)
version-done
(ld x10 (+ x2 24))
(sw (+ x10 (Request version)) x7)
(ld x5 (+ x2 8))
(ld x6 (+ x2 16))
(beq x5 x6 bad-request)
(lb x7 x5)
(subi x7 x7 #'\n')
(bne x7 x0 bad-request)
(addi x5 x5 1)

;; TODO
headers-loop

(defcon 404-msg "HTTP/1.1 404 Not Found\r\n\r\n")
(la x11 404-msg)
(addi x12 x0 (len 404-msg))

(ld x10 (+ x2 24))
(ld x5 (+ x10 (Request path)))
(ld x6 (+ x10 (Request path.len)))
(sub x6 x6 x5)
(subi x6 x6 1)
(bne x6 x0 write)
(lb x5 x5)
(subi x5 x5 #'/')
(bne x5 x0 write)
;; write(cfd, msg, msg.len)
(defcon 200-msg "HTTP/1.1 200 OK\r\n\r\n")
(la x11 200-msg)
(addi x12 x0 (len 200-msg))
write
(ld x10 x2)
(addi x17 x0 SYS_WRITE)
(ecall)
;; close(cfd)
(ld x10 x2)
(addi x17 x0 SYS_CLOSE)
(ecall)
(addi x2 x2 32)
;; close(fd)
(ld x10 x2)
(addi x2 x2 8)
(addi x17 x0 SYS_CLOSE)
(ecall)
;; exit(0)
(add x10 x0 x0)
(addi x17 x0 SYS_EXIT)
(ecall)

socket-err
    (defcon socket-msg "Socket creation failed\n")
    (la x11 socket-msg)
    (addi x12 x0 (len socket-msg))
    (jal x0 print-err)
reuseaddr-err
    (defcon reuseaddr-msg "SO_REUSEADDR failed\n")
    (la x11 reuseaddr-msg)
    (addi x12 x0 (len reuseaddr-msg))
    (jal x0 print-err)
bind-err
    (defcon bind-msg "Bind failed\n")
    (la x11 bind-msg)
    (addi x12 x0 (len bind-msg))
    (jal x0 print-err)
listen-err
    (defcon listen-msg "Listen failed\n")
    (la x11 listen-msg)
    (addi x12 x0 (len listen-msg))
    (jal x0 print-err)
accept-err
    (defcon accept-msg "Accept failed\n")
    (la x11 accept-msg)
    (addi x12 x0 (len accept-msg))
    (jal x0 print-err)
read-err
    (defcon read-msg "Read failed\n")
    (la x11 read-msg)
    (addi x12 x0 (len read-msg))
    (jal x0 print-err)
bad-request
    (defcon bad-msg "Bad request\n")
    (la x11 bad-msg)
    (addi x12 x0 (len bad-msg))
print-err
    (addi x10 x0 STDERR)
    (addi x17 x0 SYS_WRITE)
    (ecall)
    (addi x10 x0 1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
